[{"C:\\Users\\Cody\\Desktop\\Coding\\old-react\\src\\index.js":"1","C:\\Users\\Cody\\Desktop\\Coding\\old-react\\src\\components\\searchBar.js":"2","C:\\Users\\Cody\\Desktop\\Coding\\old-react\\src\\components\\videoList.js":"3","C:\\Users\\Cody\\Desktop\\Coding\\old-react\\src\\components\\videoListItem.js":"4","C:\\Users\\Cody\\Desktop\\Coding\\old-react\\src\\components\\videoDetail.js":"5"},{"size":1369,"mtime":1607028595130,"results":"6","hashOfConfig":"7"},{"size":788,"mtime":1607028293996,"results":"8","hashOfConfig":"7"},{"size":505,"mtime":1607027480682,"results":"9","hashOfConfig":"7"},{"size":708,"mtime":1607027260339,"results":"10","hashOfConfig":"7"},{"size":692,"mtime":1607024614673,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19627v9",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},"C:\\Users\\Cody\\Desktop\\Coding\\old-react\\src\\index.js",[],"C:\\Users\\Cody\\Desktop\\Coding\\old-react\\src\\components\\searchBar.js",[],["25","26"],"C:\\Users\\Cody\\Desktop\\Coding\\old-react\\src\\components\\videoList.js",[],"C:\\Users\\Cody\\Desktop\\Coding\\old-react\\src\\components\\videoListItem.js",["27"],"import React from 'react'\r\n\r\nconst VideoListItem = ({video, onVideoSelect}) => {\r\n    //const video = props.video; is the same as {video}\r\n    const imageUrl = video.snippet.thumbnails.default.url;\r\n\r\n    return (\r\n        <li onClick={() => onVideoSelect(video)} className=\"list-group-item\">\r\n            <div className=\"video-list media\">\r\n                <div className=\"media-left\">\r\n                    <img className=\"media-object\" src={imageUrl} />\r\n                </div>\r\n                <div className=\"media-body\">\r\n                    <div className=\"media-heading\">{video.snippet.title}</div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default VideoListItem;","C:\\Users\\Cody\\Desktop\\Coding\\old-react\\src\\components\\videoDetail.js",["28"],"import React from 'react'\r\n\r\nconst VideoDetail = ({video}) => {\r\n    if (!video) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    const videoId = video.id.videoId;\r\n    const url = `https://www.youtube.com/embed/${videoId}`;\r\n\r\n    return (\r\n        <div className=\"video-detail col-md-8\">\r\n            <div className=\"embed-responsive embed-responsive-16by9\">\r\n                <iframe className=\"embed-responsive-item\" src={url}></iframe>\r\n            </div>\r\n            <div className=\"details\">\r\n                <div>{video.snippet.title}</div>\r\n                <div>{video.snippet.description}</div>\r\n            </div>\r\n        </div>   \r\n\r\n    )\r\n};\r\n\r\nexport default VideoDetail;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":11,"column":21,"nodeType":"35","endLine":11,"endColumn":68},{"ruleId":"36","severity":1,"message":"37","line":14,"column":17,"nodeType":"35","endLine":14,"endColumn":69},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]